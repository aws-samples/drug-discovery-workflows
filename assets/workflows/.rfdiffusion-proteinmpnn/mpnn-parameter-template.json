{
  "container_image": {
    "description": "Container image",
    "optional": false
  },
  "suppress_print": {
    "description": "0 for False, 1 for True. Default is 0",
    "optional": true
  },
  "ca_only": {
    "description": "Parse CA-only structures and use CA-only models (default: False)",
    "optional": true
  },
  "path_to_model_weights": {
    "description": "S3 Path to model weights folder.",
    "optional": false
  },
  "model_name": {
    "description": "ProteinMPNN model name: v_48_002, v_48_010, v_48_020, v_48_030; v_48_010=version with 48 edges 0.10A noise",
    "optional": false
  },
  "use_soluble_model": {
    "description": "Flag to load ProteinMPNN weights trained on soluble proteins only. (default: False)",
    "optional": true
  },
  "seed": {
    "description": "If set to 0 then a random seed will be picked. Default is 0",
    "optional": true
  },
  "save_score": {
    "description": "0 for False, 1 for True; save score=-log_prob to npy files. (default: 0)",
    "optional": true
  },
  "save_probs": {
    "description": "0 for False, 1 for True; save MPNN predicted probabilites per position. (default: 0)",
    "optional": true
  },
  "score_only": {
    "description": "0 for False, 1 for True; score input backbone-sequence pairs. (default: 0)",
    "optional": true
  },
  "path_to_fasta": {
    "description": "S3 Path score provided input sequence in a fasta format; e.g. GGGGGG/PPPPS/WWW for chains A, B, C sorted alphabetically and separated by /. (default: '')",
    "optional": true
  },
  "conditional_probs_only": {
    "description": "0 for False, 1 for True; output conditional probabilities p(s_i given the rest of the sequence and backbone). (default: 0)",
    "optional": true
  },
  "conditional_probs_only_backbone": {
    "description": "0 for False, 1 for True; if true output conditional probabilities p(s_i given backbone). (default: 0)",
    "optional": true
  },
  "unconditional_probs_only": {
    "description": "0 for False, 1 for True; output unconditional probabilities p(s_i given backbone) in one forward pass. (default: 0)",
    "optional": true
  },
  "backbone_noise": {
    "description": "Standard deviation of Gaussian noise to add to backbone atoms. (default: 0.00)",
    "optional": true
  },
  "num_seq_per_target": {
    "description": "Number of sequences to generate per target. Default is 1",
    "optional": true
  },
  "batch_size": {
    "description": "Batch size; can set higher for titan, quadro GPUs, reduce this if running out of GPU memory. Default is 1",
    "optional": true
  },
  "max_length": {
    "description": "Max sequence length. (default: 200000)",
    "optional": true
  }, 
  "sampling_temp": {
    "description": "A string of temperatures, 0.2 0.25 0.5. Sampling temperature for amino acids. Suggested values 0.1, 0.15, 0.2, 0.25, 0.3. Higher values will lead to more diversity. Default is 0.1",
    "optional": true
  },
  "out_folder": {
    "description": "Path to a folder to output sequences, e.g. /home/out/",
    "optional": true
  },
  "pdb_path": {
      "description": "S3 Path to a single PDB to be designed.",
      "optional": false
  },
  "pdb_path_chains": {
    "description": "Define which chains need to be designed for a single PDB.",
    "optional": false
  },
  "jsonl_path": {
    "description": "S3 Path to a folder with parsed pdb into jsonl. (default: '')",
    "optional": true
  },
  "chain_id_jsonl": {
    "description": "S3 Path to a dictionary specifying which chains need to be designed and which ones are fixed, if not specied all chains will be designed. (default: '')",
    "optional": true
  },
  "fixed_positions_jsonl": {
    "description": "S3 Path to a dictionary with fixed positions. (default: '')",
    "optional": true
  },
  "omit_AAs": {
    "description": "Specify which amino acids should be omitted in the generated sequence, e.g. 'AC' would omit alanine and cystine. (default: 'X')",
    "optional": true
  },
  "bias_AA_jsonl": {
    "description": "S3 Path to a dictionary which specifies AA composion bias if neededi, e.g. {A: -1.1, F: 0.7} would make A less likely and F more likely. (default: '')",
    "optional": true
  },
  "bias_by_res_jsonl": {
    "description": "S3 Path to dictionary with per position bias. (default: '')",
    "optional": true
  },
  "omit_AA_jsonl": {
    "description": "S3 Path to a dictionary which specifies which amino acids need to be omited from design at specific chain indices. (default: '')",
    "optional": true
  },
  "pssm_jsonl": {
    "description": "S3 Path to a dictionary with pssm. (default: '')",
    "optional": true
  },
  "pssm_multi": {
    "description": "A value between [0.0, 1.0], 0.0 means do not use pssm, 1.0 ignore MPNN predictions. (default: 0.0)",
    "optional": true
  },
  "pssm_threshold": {
    "description": "A value between -inf + inf to restric per position AAs. (default: 0.0)",
    "optional": true
  },
  "pssm_log_odds_flag": {
    "description": "0 for False, 1 for True. (default: 0)",
    "optional": true
  },
  "pssm_bias_flag": {
    "description": "0 for False, 1 for True. (default: 0)",
    "optional": true
  },
  "tied_positions_jsonl": {
    "description": "S3 Path to a dictionary with tied positions. (default: '')",
    "optional": true
  }
}