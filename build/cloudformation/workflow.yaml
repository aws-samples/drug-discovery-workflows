# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: 2010-09-09
Description: >-
  workflow.yaml: Creates resources to build Amazon HealthOmics workflows
Parameters:
  ApplicationName:
    Description: Name of the application, if applicable
    Type: String
    Default: Amazon HealthOmics Drug Discovery Workflows
  Environment:
    Description: Leave this as "main" unless you are testing a pre-release versions of this architecture.
    Type: String
    Default: main
    AllowedValues:
      - main
      - dev    
  S3BucketName:
    Description: Name of the S3 bucket to use for deployment and run storage
    Type: String
  Timestamp:
    Description: Timestamp for the cfn deployment
    Type: Number
    Default: 9999999999
  StackPrefix:
    Description: Stack-specific prefix for resource naming
    Type: String
    Default: abc-123

Resources:
  EncryptionKey:
    Type: "AWS::KMS::Key"
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: !Sub "${ApplicationName}-workflow-build-key"
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
              ]
            Resource: "*"
          - Sid: Enable CodeBuild Encryption
            Effect: Allow
            Principal:
              AWS: !GetAtt CodeBuildWorkflowRole.Arn
            Action:
              [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ]
            Resource: "*"
          - Sid: Enable CloudWatch Logs Encryption
            Effect: Allow
            Principal:
              Service: "logs.amazonaws.com"
            Action:
              [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey",
              ]
            Resource: "*"
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref StackPrefix

  OmicsWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StackPrefix}-OmicsWorkflowRole"
      Description: "Required service policies to support Omics workflows"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - omics.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: S3RWPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:PutObject
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}/*"
              - Action:
                  - s3:ListBucket
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}"
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::aws-hcls-ml*"
                  - !Sub "arn:${AWS::Partition}:s3:::aws-genomics-static*"
              - Action:
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/omics/WorkflowLog:log-stream:*
              - Action:
                  - logs:CreateLogGroup
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/omics/WorkflowLog:*
              - Action:
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchCheckLayerAvailability
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/*"
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref AWS::StackId

  CodeBuildWorkflowRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StackPrefix}-CodeBuildWorkflowRole"
      Description: "Required service policies to support building workflows"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: CodeBuildWorkflowPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${StackPrefix}-CodeBuildWorkflow*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}/*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}"
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource:
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${StackPrefix}-CodeBuildWorkflowProject"
              - Effect: Allow
                Action:
                  - omics:TagResource
                  - omics:CreateRun
                  - omics:DeleteRun
                  - omics:GetRun
                  - omics:ListRuns
                  - omics:CreateRunGroup
                  - omics:DeleteRunGroup
                  - omics:GetRunGroup
                  - omics:ListRunGroups
                  - omics:GetRunTask
                  - omics:ListRunTasks
                  - omics:CreateWorkflow
                  - omics:DeleteWorkflow
                  - omics:GetWorkflow
                  - omics:ListWorkflows
                Resource:
                  - !Sub "arn:${AWS::Partition}:omics:${AWS::Region}:${AWS::AccountId}:workflow/*"
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref StackPrefix

  CodeBuildWorkflowProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${StackPrefix}-CodeBuildWorkflowProject"
      Artifacts:
        Type: NO_ARTIFACTS
      Description: Build Amazon HealthOmics workflow
      EncryptionKey: !Ref EncryptionKey
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: REGION
            Value: !Ref "AWS::Region"
          - Name: STACK_PREFIX
            Value: !Ref StackPrefix
          - Name: S3_BUCKET_NAME
            Value: !Ref S3BucketName
        Image: aws/codebuild/standard:7.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ResourceAccessRole: !GetAtt CodeBuildWorkflowRole.Arn
      ServiceRole: !GetAtt CodeBuildWorkflowRole.Arn
      Source:
        BuildSpec: build/buildspec/buildspec_workflow.yaml
        Location: !Sub "${S3BucketName}/build/${Environment}/code/code.zip"
        Type: S3
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref StackPrefix

  CodeBuildWorkflowLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StackPrefix}-CodeBuildWorkflowLambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: StartCodeBuildWorkflowLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt CodeBuildWorkflowProject.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}/*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  StartCodeBuildWorkflowLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${StackPrefix}-StartCodeBuildWorkflowLambda"
      ReservedConcurrentExecutions: 10
      Code: "../lambda/StartCodeBuildLambda"
      Description: Start CodeBuildWorkflowProject
      Handler: index.lambda_handler
      MemorySize: 512
      Role:
        Fn::GetAtt: CodeBuildWorkflowLambdaExecutionRole.Arn
      Runtime: python3.11
      Timeout: 30
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref StackPrefix

  StartCodeBuildWorkflow:
    Type: Custom::ResourceForBuildingWorkflow
    Properties:
      ServiceToken:
        Fn::GetAtt: StartCodeBuildWorkflowLambda.Arn
      SourceS3URI: !Sub "${S3BucketName}/build/${Environment}/code/code.zip"
      SourceSubfolder: "assets/workflows"
      ProjectName:
        Ref: CodeBuildWorkflowProject
      Timestamp:
        Ref: Timestamp

  DeleteWorkflowLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StackPrefix}-DeleteWorkflowLambdaExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: DeleteWorkflowLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - omics:DeleteWorkflow
                  - omics:GetWorkflow
                  - omics:ListWorkflows
                  - omics:ListTagsForResource
                Resource:
                  - !Sub "arn:${AWS::Partition}:omics:${AWS::Region}:${AWS::AccountId}:workflow/*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  DeleteWorkflowLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${StackPrefix}-DeleteWorkflowLambda"
      ReservedConcurrentExecutions: 10
      Code: "../lambda/DeleteWorkflowLambda"
      Description: Delete Amazon HealthOmics workflow
      Handler: index.lambda_handler
      MemorySize: 512
      Role:
        Fn::GetAtt: DeleteWorkflowLambdaExecutionRole.Arn
      Runtime: python3.11
      Timeout: 30
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: StackPrefix
          Value: !Ref StackPrefix

  DeleteWorkflows:
    Type: Custom::ResourceForDeletingWorkflows
    Properties:
      ServiceToken:
        Fn::GetAtt: DeleteWorkflowLambda.Arn
      StackPrefix:
        Ref: StackPrefix
